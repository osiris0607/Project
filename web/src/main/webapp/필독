[12/10, 목]

1. 테이블 컬럼명 - vo 필드 속성명 - jsp 태그 name명 통일
	* 테이블 컬럼명과 vo필드 속성명이 동일하지 않아서 매핑이 안됨 -> null파티
	1. 새로 공유한 테이블로 갱신 (테이블 명 변경)
	2. vo 필드 속성명 naming rule : camel case(EX. productTitle / productPrice...) 
	3. 값을 보내는 태그 name값은 vo 필드 속성명과 동일하게.
	
	--> DB와 vo를 매핑하기 위해 mapper.xml에서 [db컬럼명] as [vo속성명]으로 alias 주던가, ResultMap 설정하던가 택 1 [검색요망] 
	
	※이미 작성한 SellerinfoVO, UserinfoVo, ZipcodeBean은 제외


2. bean대신 vo를 사용하여 파일 생성 해주세요.

3. mapper 생성시 Config.xml에 typeAlias 등록해주세요.

4. 각자 완성된 기능은 효은에게 보내주시면 merge하여 push합니다. 입력 commnet 참고(조금이라도 손댄 파일의 파일명 기록하여 같이 보내주세요.)

5. 깃허브에서 import한 프로젝트는 pull하여 동기화까지만 하고 push는 하지 말아주세요. (꼬임 방지)

6. servlet-context에서 DB정보 변경, 로컬로 k4cl 계정 접속 후 테이블 생성 및 데이터 삽입

7. 개인회원 회원가입시 onblur로 function줬으므로 바깥 한번씩 클릭해서 포커스 잃어줘야 값 들어감...^^;;


---------------------------------------------------------------------

[12/16, 수] 수정사항

1. 수정된 테이블명에 맞게 mapper 수정 완료
2. userinfo vo 속성명 변경
3. 앞으로 생성할 vo 속성명 의견 물어보기 (이미 생성한 것은 제외)
	1. camel-case로 작성 -> select * 못함, alias 또는 ResultMap으로 매핑필요
	2. 테이블 컬럼명과 동일 -> 가장 편하나 Java 네이밍 룰 위배 
	
	
4. 깃허브... 쓸거면 참고사항
  PULL하기 위해서는 PUSH해야함
  PUSH하기 위해서는 PULL해야함
  -> PULL해서 수정사항 내려받음 -> 해당 사용자의 코드가 변경되면서 PUSH할게 생김 -> 근데 PUSH안하면 다음 PULL을 못함..
  
  *PULL안해놓고  PUSH 하려하면  내려받을코드(PULL)이 우선으로 적용되서  PUSH(올릴 코드)를 덮어버림!!! (어떻게알았냐고? 나도 알고싶지않았음,....)
  	자!주! PUSH! PULL! 해주자!!
  
  1. 프로젝트 워크스페이스와 깃허브 워크스페이스를 분리
  2 .프로젝트 워크스페이스에서 바꾼 부분있으면 효은에게 알리고 공유
  3. 효은이 깃허브 업데이트 하고 PUSH해주면 깃허브 워크스페이스에서 PULL -> PUSH
  4. COMMIT된 것까지 확인하기
  5. 다음 일 진행하기